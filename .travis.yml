sudo: required
dist: trusty
services:
  - docker
env:
  - PG_SUPPORTED_VERSIONS=9.3
before_install:
  - docker pull heroku/dod-package-dev:trusty
  - docker pull heroku/dod-package-dev:xenial
  - mkdir -p ../deb-build ../packages/trusty ../packages/xenial
  - |
    cat <<EOF > ../deb-build/build.sh
#!/bin/sh -x

export DEBIAN_FRONTEND=noninteractive

wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -

apt-get update -y
apt-get install -y -t $DIST debhelper fakeroot postgresql-common postgresql-server-dev-all postgresql-server-dev-$PG_SUPPORTED_VERSIONS

if [ ! -x /usr/lib/postgresql/$PG_SUPPORTED_VERSIONS/bin/postgres ]; then
  sudo /etc/init.d/postgresql stop # stop postgresql again before installing the server
  apt-get install -y postgresql-$PG_SUPPORTED_VERSIONS
fi

/etc/init.d/postgresql stop
pg_lsclusters
dpkg -l postgresql\* | cat

cd /root/build/pgextwlist

pg_buildext updatecontrol
dpkg-buildpackage -us -uc -rfakeroot
for deb in ../*.deb; do echo "$deb:"; dpkg-deb --info $deb; dpkg-deb --contents $deb; done
sudo dpkg -i ../*.deb
pg_buildext -i '--locale=C.UTF-8' -o local_preload_libraries=pgextwlist -o extwlist.extensions=citext,earthdistance,pg_trgm installcheck

EOF
  - chmod 755 ../deb-build/build.sh
script:
  - |
    docker run -v ../deb-build:/root/deb-build \
               -v ../packages/trusty:/root/build \
               -v .:/root/build/pgextwlist \
               -e DIST=$DIST-pgdg -e PG_SUPPORTED_VERSIONS=$PG_SUPPORTED_VERSIONS \
               --privileged=true -it heroku/dod-package-dev:trusty \
               /root/deb-build/build.sh
  - |
    docker run -v ../deb-build:/root/deb-build \
               -v ../packages/trusty:/root/build \
               -v .:/root/build/pgextwlist \
               -e DIST=$DIST-pgdg -e PG_SUPPORTED_VERSIONS=$PG_SUPPORTED_VERSIONS \
               --privileged=true -it heroku/dod-package-dev:xenial \
               /root/deb-build/build.sh
  - du -a ../packages
